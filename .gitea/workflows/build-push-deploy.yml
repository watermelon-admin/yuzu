name: Build, Push and Update Deployment

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-push-deploy:
    runs-on: custom-runner
    env:
      # Set to 'true' to skip SSH test (for debugging purposes)
      SKIP_SSH_TEST: 'false'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH tools
        run: |
          echo "Installing SSH tools..."
          apk add --no-cache openssh-client
          echo "SSH tools installed successfully"

      - name: Setup SSH key for deployment repo
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

          # Examine the key format and generate public key
          echo "Checking private key format and generating public key..."
          ssh-keygen -y -f ~/.ssh/id_ed25519 > ~/.ssh/id_ed25519.pub
          chmod 644 ~/.ssh/id_ed25519.pub

          # Display public key fingerprint (for verification)
          echo "SSH key fingerprint (should match deploy key in Gitea):"
          ssh-keygen -l -f ~/.ssh/id_ed25519.pub

          # Add gitea server to known hosts
          ssh-keyscan -t ed25519 gitea.watermelonsoft.eu >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

          # Test SSH connection with timeout and verbosity (can be skipped)
          if [[ "$SKIP_SSH_TEST" != "true" ]]; then
            echo "Testing SSH connection..."
            timeout 10 ssh -vvv -T git@gitea.watermelonsoft.eu || true
            echo "SSH test completed (timeout after 10 seconds)"
          else
            echo "Skipping SSH test as SKIP_SSH_TEST=true"
          fi
          echo "SSH setup complete"

      - name: Get version tag
        id: get_version
        run: |
          if [[ ${{ github.ref_type }} == 'tag' && ${{ github.ref_name }} == v* ]]; then
            # If this is a tag push like v1.2.3, use that as version without the 'v'
            VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            # Otherwise use commit SHA for untagged builds
            SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
            echo "version=$SHORT_SHA" >> $GITHUB_OUTPUT
          fi
      
      - name: Configure Docker Credentials
        env:
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        run: |
          # Login to Scaleway registry
          echo "$SCW_SECRET_KEY" | docker login rg.fr-par.scw.cloud -u nologin --password-stdin
          echo "Docker login completed"

      - name: Build Docker image
        run: docker build -t yuzu:latest .

      - name: Tag Docker images
        run: |
          docker tag yuzu:latest rg.fr-par.scw.cloud/cr-yuzu-par-1/yuzu-web:latest
          docker tag yuzu:latest rg.fr-par.scw.cloud/cr-yuzu-par-1/yuzu-web:${{ steps.get_version.outputs.version }}

      - name: Push Docker images to registry
        env:
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        run: |
          echo "Pushing image with tag: latest"
          docker push rg.fr-par.scw.cloud/cr-yuzu-par-1/yuzu-web:latest
          
          echo "Pushing image with tag: ${{ steps.get_version.outputs.version }}"
          docker push rg.fr-par.scw.cloud/cr-yuzu-par-1/yuzu-web:${{ steps.get_version.outputs.version }}
      
      - name: Configure Git
        run: |
          git config --global user.name "Gitea Workflow"
          git config --global user.email "noreply@gitea.local"

      - name: Clone Deployment Repo (SSH with HTTPS fallback)
        env:
          DEPLOY_PAT: ${{ secrets.DEPLOY_PAT }}
        run: |
          # Try SSH first
          echo "Attempting to clone via SSH..."
          if timeout 30 git clone git@gitea.watermelonsoft.eu:uwe/YuzuDeploy.git deploy-repo; then
            echo "SSH clone successful"
          else
            echo "SSH clone failed, trying HTTPS with token..."
            # Clean up failed clone attempt
            rm -rf deploy-repo

            # Try HTTPS with PAT if available
            if [[ -n "$DEPLOY_PAT" ]]; then
              echo "Using PAT authentication"
              git clone https://oauth2:${DEPLOY_PAT}@gitea.watermelonsoft.eu/uwe/YuzuDeploy.git deploy-repo
            else
              echo "No PAT available for HTTPS fallback, trying basic HTTPS clone..."
              git clone https://gitea.watermelonsoft.eu/uwe/YuzuDeploy.git deploy-repo
            fi
          fi

          cd deploy-repo
          echo "Successfully cloned deployment repository"

          # Verify we have the expected files
          ls -la
      
      - name: Update Deployment Files
        run: |
          cd deploy-repo
          
          # Update the image tag in deployment files
          sed -i "s|image: rg.fr-par.scw.cloud/cr-yuzu-par-1/yuzu-web:.*|image: rg.fr-par.scw.cloud/cr-yuzu-par-1/yuzu-web:${{ steps.get_version.outputs.version }}|g" dev/scaleway-yuzu-deployment.yaml
          
          # Commit and push changes
          git add dev/scaleway-yuzu-deployment.yaml
          git commit -m "Update deployment to image version ${{ steps.get_version.outputs.version }}"
          git push origin main