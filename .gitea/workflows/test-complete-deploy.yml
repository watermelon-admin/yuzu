name: Test Deployment Connection

on:
  workflow_dispatch:

jobs:
  test-deployment:
    runs-on: custom-runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH tools
        run: |
          echo "Installing SSH tools..."
          apk add --no-cache openssh-client git
          echo "SSH tools installed successfully"

      - name: Setup SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.RSA_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Write key to file and fix permissions
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Generate public key
          echo "Generating public key from private key..."
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
          chmod 644 ~/.ssh/id_rsa.pub

          # Display key fingerprint
          echo "RSA key fingerprint:"
          ssh-keygen -l -f ~/.ssh/id_rsa.pub

      - name: Add Gitea server to known hosts
        run: |
          # Add gitea server to known hosts (with port 29418)
          ssh-keyscan -p 29418 gitea.watermelonsoft.eu >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Test SSH connection
        run: |
          echo "Testing SSH connection with RSA key on port 29418..."
          timeout 10 ssh -vvv -i ~/.ssh/id_rsa -p 29418 -o IdentitiesOnly=yes -o StrictHostKeyChecking=no git@gitea.watermelonsoft.eu || true
          echo "SSH test completed"

      - name: Test Git Clone
        run: |
          echo "Cloning repository..."
          GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -p 29418 -o IdentitiesOnly=yes -o StrictHostKeyChecking=no" \
          git clone ssh://git@gitea.watermelonsoft.eu:29418/Yuzu/YuzuDeploy.git deploy-repo

          cd deploy-repo
          echo "Successfully cloned deployment repository"
          ls -la

      - name: Configure Git
        run: |
          git config --global user.name "Gitea Workflow Test"
          git config --global user.email "noreply-test@gitea.local"

      - name: Test file modification
        run: |
          cd deploy-repo

          # Create a test file change
          echo "# Test change by workflow at $(date)" >> README.md

          # Display the changes
          echo "Changes to be committed:"
          git diff README.md

          # Commit the changes
          git add README.md
          git commit -m "Test commit from workflow - DO NOT MERGE"

          # Push changes to a test branch to avoid modifying main
          git checkout -b test-workflow-$(date +%s)

          # Push test branch
          echo "Pushing test branch..."
          GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -p 29418 -o IdentitiesOnly=yes -o StrictHostKeyChecking=no" \
          git push origin HEAD

          echo "Successfully pushed test changes to a new branch in the deployment repository"